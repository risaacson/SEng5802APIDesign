swagger: '2.0'
info:
  title: Interview Organizer API
  description: The backing Interview Organizer API
  version: "0.0.1"
# the domain of the service
host: api.intervieworganizer.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /
consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    get:
      summary: List Users
      description: |
        User endpoint that returns a list of users.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: type
          in: query
          type: string
          description: Limit list by user type.
      tags:
        - User
      responses:
        200:
          description: An array of Users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  /user/{identifier}:
    get:
      summary: List User
      description: |
        The User endpoint that returns
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a User.
          required: true
          type: string
      tags:
        - User
      responses:
        200:
          description: A single user
          schema:
            $ref: '#/definitions/User'
    delete:
      summary: Delete a User
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a User.
          required: true
          type: string
      tags:
        - User
      responses:
        204:
          description: The User has been deleted.
    post:
      summary: Update a User
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a User.
          required: true
          type: string
        - name: user
          in: body
          description: The payload of the User to be updated.
          required: true
          schema:
            $ref: '#/definitions/User'
      tags:
        - User
      responses:
        201:
          description: The User has been updated.
  /user:
    put:
      summary: Create a User
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: user
          in: body
          description: The unique identifier of a User.
          required: true
          schema:
            $ref: '#/definitions/User'
      tags:
        - User
      responses:
        201:
          description: The User has been created.
  /contact/Companies:
    get:
      summary: List Company Contacts
      description: |
        Contact endpoint that returns a list of contacts.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: type
          in: query
          type: string
          description: Limit list by contact type.
      tags:
        - Contact
      responses:
        200:
          description: An array of Contacts
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactCompany'
  /contact/company/{identifier}:
    get:
      summary: List Company Contact
      description: |
        The Company Contact endpoint that returns
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Company Contact.
          required: true
          type: string
      tags:
        - Contact
      responses:
        200:
          description: A single contact
          schema:
            $ref: '#/definitions/ContactCompany'
    delete:
      summary: Delete a Company Contact
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Company Contact.
          required: true
          type: string
      tags:
        - Contact
      responses:
        204:
          description: The Company Contact has been deleted.
    post:
      summary: Update a Company Contact
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Company Contact.
          required: true
          type: string
        - name: contact
          in: body
          description: The payload of the Company Contact to be updated.
          required: true
          schema:
            $ref: '#/definitions/ContactCompany'
      tags:
        - Contact
      responses:
        201:
          description: The Company Contact has been updated.
  /contact/company/:
    put:
      summary: Create a Company Contact
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: contact
          in: body
          description: The unique identifier of a Company Contact.
          required: true
          schema:
            $ref: '#/definitions/ContactCompany'
      tags:
        - Contact
      responses:
        201:
          description: The Company Contact has been created.
  /contact/persons:
    get:
      summary: List Person Contacts
      description: |
        Contact endpoint that returns a list of contacts.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: type
          in: query
          type: string
          description: Limit list by contact type.
      tags:
        - Contact
      responses:
        200:
          description: An array of Person Contacts
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactPerson'
  /contact/person/{identifier}:
    get:
      summary: List Person Contact
      description: |
        The Person Contact endpoint that returns
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Person Contact.
          required: true
          type: string
      tags:
        - Contact
      responses:
        200:
          description: A single contact
          schema:
            $ref: '#/definitions/ContactPerson'
    delete:
      summary: Delete a Person Contact
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Person Contact.
          required: true
          type: string
      tags:
        - Contact
      responses:
        204:
          description: The Person Contact has been deleted.
    post:
      summary: Update a Person Contact
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Person Contact.
          required: true
          type: string
        - name: contact
          in: body
          description: The payload of the Person Contact to be updated.
          required: true
          schema:
            $ref: '#/definitions/ContactPerson'
      tags:
        - Contact
      responses:
        201:
          description: The Person Contact has been updated.
  /contact/person:
    put:
      summary: Create a Person Contact
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: contact
          in: body
          description: The unique identifier of a Person Contact.
          required: true
          schema:
            $ref: '#/definitions/ContactPerson'
      tags:
        - Contact
      responses:
        201:
          description: The Person Contact has been created.
  /documents:
    get:
      summary: List Documents
      description: |
        Document endpoint that returns a list of documents.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: type
          in: query
          type: string
          description: Limit list by document type.
      tags:
        - Document
      responses:
        200:
          description: An array of Documents
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
  /document/{identifier}:
    get:
      summary: List Document
      description: |
        The Document endpoint that returns
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Document.
          required: true
          type: string
      tags:
        - Document
      responses:
        200:
          description: A single document
          schema:
            $ref: '#/definitions/Document'
    delete:
      summary: Delete a Document
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Document.
          required: true
          type: string
      tags:
        - Document
      responses:
        204:
          description: The Document has been deleted.
    post:
      summary: Update a Document
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Document.
          required: true
          type: string
        - name: document
          in: body
          description: The payload of the Document to be updated.
          required: true
          schema:
            $ref: '#/definitions/Document'
      tags:
        - Document
      responses:
        201:
          description: The Document has been updated.
  /document:
    put:
      summary: Create a Document
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: document
          in: body
          description: The unique identifier of a Document.
          required: true
          schema:
            $ref: '#/definitions/Document'
      tags:
        - Document
      responses:
        201:
          description: The Document has been created.
  /document/coverLetters:
    get:
      summary: List Cover Letter Documents
      description: |
        Document endpoint that returns a list of documents.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: type
          in: query
          type: string
          description: Limit list by document type.
      tags:
        - Document
      responses:
        200:
          description: An array of Cover Letter Documents
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentCoverLetter'
  /document/coverLetter/{identifier}:
    get:
      summary: List Cover Letter Document
      description: |
        The Document endpoint that returns
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Cover Letter Document.
          required: true
          type: string
      tags:
        - Document
      responses:
        200:
          description: A single document
          schema:
            $ref: '#/definitions/DocumentCoverLetter'
    delete:
      summary: Delete a Cover Letter Document
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Cover Letter Document.
          required: true
          type: string
      tags:
        - Document
      responses:
        204:
          description: The Cover Letter Document has been deleted.
    post:
      summary: Update a Cover Letter Document
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Cover Letter Document.
          required: true
          type: string
        - name: document
          in: body
          description: The payload of the Cover Letter Document to be updated.
          required: true
          schema:
            $ref: '#/definitions/DocumentCoverLetter'
      tags:
        - Document
      responses:
        201:
          description: The Cover Letter Document has been updated.
  /document/coverLetter:
    put:
      summary: Create a Cover Letter Document
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: document
          in: body
          description: The unique identifier of a Cover Letter Document.
          required: true
          schema:
            $ref: '#/definitions/DocumentCoverLetter'
      tags:
        - Document
      responses:
        201:
          description: The Cover Letter Document has been created.
  /document/resumes:
    get:
      summary: List Resume Documents
      description: |
        Document endpoint that returns a list of documents.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: type
          in: query
          type: string
          description: Limit list by document type.
      tags:
        - Document
      responses:
        200:
          description: An array of Resume Documents
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentResume'
  /document/resume/{identifier}:
    get:
      summary: List Resume Document
      description: |
        The Document endpoint that returns
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Resume Document.
          required: true
          type: string
      tags:
        - Document
      responses:
        200:
          description: A single document
          schema:
            $ref: '#/definitions/DocumentResume'
    delete:
      summary: Delete a Resume Document
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Resume Document.
          required: true
          type: string
      tags:
        - Document
      responses:
        204:
          description: The Resume Document has been deleted.
    post:
      summary: Update a Resume Document
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Resume Document.
          required: true
          type: string
        - name: document
          in: body
          description: The payload of the Resume Document to be updated.
          required: true
          schema:
            $ref: '#/definitions/DocumentResume'
      tags:
        - Document
      responses:
        201:
          description: The Resume Document has been updated.
  /document/resume:
    put:
      summary: Create a Resume Document
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: document
          in: body
          description: The unique identifier of a Resume Document.
          required: true
          schema:
            $ref: '#/definitions/DocumentResume'
      tags:
        - Document
      responses:
        201:
          description: The Resume Document has been created.
  /interviews:
    get:
      summary: List Interviews
      description: |
        Interview endpoint that returns a list of interviews.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: type
          in: query
          type: string
          description: Limit list by interview type.
      tags:
        - Interview
      responses:
        200:
          description: An array of Interviews
          schema:
            type: array
            items:
              $ref: '#/definitions/Interview'
  /interview/{identifier}:
    get:
      summary: List Interview
      description: |
        The Interview endpoint that returns
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Interview.
          required: true
          type: string
      tags:
        - Interview
      responses:
        200:
          description: A single interview
          schema:
            $ref: '#/definitions/Interview'
    delete:
      summary: Delete a Interview
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Interview.
          required: true
          type: string
      tags:
        - Interview
      responses:
        204:
          description: The Interview has been deleted.
    post:
      summary: Update a Interview
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Interview.
          required: true
          type: string
        - name: interview
          in: body
          description: The payload of the Interview to be updated.
          required: true
          schema:
            $ref: '#/definitions/Interview'
      tags:
        - Interview
      responses:
        201:
          description: The Interview has been updated.
  /jobs:
    get:
      summary: List Jobs
      description: |
        Job endpoint that returns a list of jobs.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: type
          in: query
          type: string
          description: Limit list by job type.
      tags:
        - Job
      responses:
        200:
          description: An array of Jobs
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
  /job/{identifier}:
    get:
      summary: List Job
      description: |
        The Job endpoint that returns
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Job.
          required: true
          type: string
      tags:
        - Job
      responses:
        200:
          description: A single job
          schema:
            $ref: '#/definitions/Job'
    delete:
      summary: Delete a Job
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Job.
          required: true
          type: string
      tags:
        - Job
      responses:
        204:
          description: The Job has been deleted.
    post:
      summary: Update a Job
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Job.
          required: true
          type: string
        - name: job
          in: body
          description: The payload of the Job to be updated.
          required: true
          schema:
            $ref: '#/definitions/Job'
      tags:
        - Job
      responses:
        201:
          description: The Job has been updated.
  /job:
    put:
      summary: Create a Job
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: job
          in: body
          description: The unique identifier of a Job.
          required: true
          schema:
            $ref: '#/definitions/Job'
      tags:
        - Job
      responses:
        201:
          description: The Job has been created.
  /applications:
    get:
      summary: List Applications
      description: |
        Application endpoint that returns a list of applications.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: type
          in: query
          type: string
          description: Limit list by application type.
      tags:
        - Application
      responses:
        200:
          description: An array of Applications
          schema:
            type: array
            items:
              $ref: '#/definitions/Application'
  /application/{identifier}:
    get:
      summary: List Application
      description: |
        The Application endpoint that returns
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Application.
          required: true
          type: string
      tags:
        - Application
      responses:
        200:
          description: A single application
          schema:
            $ref: '#/definitions/Application'
    delete:
      summary: Delete a Application
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Application.
          required: true
          type: string
      tags:
        - Application
      responses:
        204:
          description: The Application has been deleted.
    post:
      summary: Update a Application
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Application.
          required: true
          type: string
        - name: application
          in: body
          description: The payload of the Application to be updated.
          required: true
          schema:
            $ref: '#/definitions/Application'
      tags:
        - Application
      responses:
        201:
          description: The Application has been updated.
  /application:
    put:
      summary: Create a Application
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: application
          in: body
          description: The unique identifier of a Application.
          required: true
          schema:
            $ref: '#/definitions/Application'
      tags:
        - Application
      responses:
        201:
          description: The Application has been created.
  /interview:
    put:
      summary: Create a Interview
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: interview
          in: body
          description: The unique identifier of a Interview.
          required: true
          schema:
            $ref: '#/definitions/Interview'
      tags:
        - Interview
      responses:
        201:
          description: The Interview has been created.
  /notifications:
    get:
      summary: List Notifications
      description: |
        Notification endpoint that returns a list of notifications.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: type
          in: query
          type: string
          description: Limit list by notification type.
      tags:
        - Notification
      responses:
        200:
          description: An array of Notifications
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
  /notification/{identifier}:
    get:
      summary: List Notification
      description: |
        The Notification endpoint that returns
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Notification.
          required: true
          type: string
      tags:
        - Notification
      responses:
        200:
          description: A single notification
          schema:
            $ref: '#/definitions/Notification'
    delete:
      summary: Delete a Notification
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Notification.
          required: true
          type: string
      tags:
        - Notification
      responses:
        204:
          description: The Notification has been deleted.
    post:
      summary: Update a Notification
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: identifier
          in: path
          description: The unique identifier of a Notification.
          required: true
          type: string
        - name: notification
          in: body
          description: The payload of the Notification to be updated.
          required: true
          schema:
            $ref: '#/definitions/Notification'
      tags:
        - Notification
      responses:
        201:
          description: The Notification has been updated.
  /notification:
    put:
      summary: Create a Notification
      description: |
        Something interesting goes here.
      parameters:
        - name: authToken
          in: header
          description: Authentication token passed with all requests.
          required: true
          type: string
        - name: notification
          in: body
          description: The unique identifier of a Notification.
          required: true
          schema:
            $ref: '#/definitions/Notification'
      tags:
        - Notification
      responses:
        201:
          description: The Notification has been created.
definitions:
  User:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific User.
      first_name:
        type: string
      last_name:
        type: string
      email_address:
        type: string
      is_deleted:
        type: boolean
      roles:
        type: array
        items:
          type: string
    required:
      - first_name
      - last_name
      - email_address
      - is_deleted
      - roles
  ContactCompany:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Company Contact.
      addresses:
        type: array
        items:
          $ref: '#/definitions/ContactCompanyAddress'
      phone_numbers:
        type: array
        items:
          $ref: '#/definitions/ContactCompanyPhone'
  ContactCompanyAddress:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Company Contact Address.
      name:
        type: string
      address_line_1:
        type: string
      address_line_2:
        type: string
      address_line_3:
        type: string
      city:
        type: string
      state_provinence:
        type: string
      country:
        type: string
      postal_zip_code:
        type: integer
    required:
      - address_line_1
      - address_line_2
      - address_line_3
      - city
      - state_provinence
      - country
      - postal_zip_code
  ContactCompanyPhone:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Company Contact Phone.
      name:
        type: string
      phone_number:
        type: string
    required:
      - name
      - phone_number
  ContactPerson:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Person Contact.
      first_name:
        type: string
      last_name:
        type: string
      addresses:
        type: array
        items:
          $ref: '#/definitions/ContactPersonAddress'
      emails:
        type: array
        items:
          $ref: '#/definitions/ContactPersonEMail'
      phone_numbers:
        type: array
        items:
          $ref: '#/definitions/ContactPersonPhone'
  ContactPersonAddress:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Person Contact Address.
      name:
        type: string
      address_line_1:
        type: string
      address_line_2:
        type: string
      address_line_3:
        type: string
      city:
        type: string
      state_provinence:
        type: string
      country:
        type: string
      postal_zip_code:
        type: integer
  ContactPersonEMail:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Person Contact E-Mail Address.
      name:
        type: string
      email_address:
        type: string
  ContactPersonPhone:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Person Contact Phone.
      name:
        type: string
      phone_number:
        type: string
  Document:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Document.
      type:
        type: string
        description: The Document type.
      name:
        type: string
      version:
        type: string
      description:
        type: string
      object_uri:
        type: string
  DocumentCoverLetter:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Cover Letter Document.
      name:
        type: string
      version:
        type: string
      description:
        type: string
      object_uri:
        type: string
  DocumentResume:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Resume Document.
      name:
        type: string
      version:
        type: string
      description:
        type: string
      object_uri:
        type: string
  Job:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Job.
      title:
        type: string
      description:
        type: string
      remote_URI:
        type: string
      status:
        type: string
  Application:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Application.
      submitted_datetime:
        type: string
        format: date-time
  Interview:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Interview.
      scheduled_datetime:
        type: string
        format: date-time
      notes:
        type: string
  Notification:
    type: object
    properties:
      identifier:
        type: string
        description: Unique identifier representing a specific Notification.
      creation_date:
        type: string
        format: date-time
      payload:
        type: string
      is_acknowledged:
        type: boolean
